# -*- coding: utf-8 -*-
"""FooEnv.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PnoXrDdiEXk9SbJof7lD5a6L_36J-AcQ
"""

import numpy as  np
import math
import random
import pandas as pd
class FooEnv(object):
  x_UWB=[0 ,6 , 12, 0 ,3 , 6]
  y_UWB=[0, 0 , 0,  5, 5, 5]
  N=len(x_UWB)
  def __init__(self, start):
    self.start=start
    self.num_actions = 15
    self.num_states = 20
    

  def _DoAction(self, action):
    Label = self.state[0]
    X_user=  self.state[1]
    Y_user=  self.state[2]
    x_TDoA=  self.state[3]
    y_TDoA=  self.state[4]


    Location_x=[1., 2., 3., 4., 5., 1., 2., 3., 4., 5., 1., 2., 3. ,4. ,5., 1. ,2. ,3. ,4., 5.]
    Location_y=[1., 1., 1., 1., 1., 2., 2., 2., 2. ,2., 3., 3., 3., 3., 3. ,4., 4. ,4. ,4. ,4.]


    Link_condition=np.array(
[[1., 1., 1., 1., 1., 1., 1., 1., 1., 1. ,1., 1., 1. ,1., 1., 0., 1., 1., 0., 1.],
 [1., 0., 0., 1., 1., 0., 1., 1., 1., 1. ,1., 1., 1. ,1., 1., 1., 1., 1., 1., 1.],
 [1., 1., 1., 1., 0., 1., 1., 1., 1., 1. ,1., 1., 1. ,1., 1., 1., 0., 1., 1., 1.],
 [1., 1., 1., 0., 1., 1., 1., 1., 1., 1. ,0., 1., 0. ,1., 1., 1., 1., 1., 1., 1.],
 [1., 1., 1., 1., 1., 1., 1., 1., 0., 1. ,1., 0., 1. ,0., 1., 1., 1., 1., 1., 1.],
 [1., 1., 1., 1., 1., 1., 0., 1., 1. ,1. ,1., 1. ,1. ,1., 1., 1., 1., 1., 1., 1.]])
    
    Estimated_X=np.array([[0.92080541, 2.55754959, 3.56294827 ,4.07047654 ,5.00962982, 1.65446637,
  2.07025804, 3.05300205, 3.98863413, 5.05334402, 1.05118333 ,2.04094691,
  2.98149286, 3.99737396, 4.9685466 , 1.50202041, 1.92154936 ,2.90599674,
  4.56070214, 5.07062182],
 [1.09708685, 2.05815177, 3.08957037, 3.96645196 ,5.57563608 ,0.96997458,
  2.03541889, 3.00514886, 3.99470451, 4.98496912 ,1.00914971 ,2.09534544,
  2.99564709, 3.9063779 , 5.07998394 ,1.55941232 ,2.54070627 ,3.07795924,
  4.68506958, 5.54476713],
 [1.0325879,  2.02193754, 2.96879542 ,4.55309572 ,4.91216912 ,0.91828615,
  2.02617768, 3.04915626, 4.0356432  ,5.07245377 ,1.66833102 ,1.99146224,
  3.66742883, 3.99386528, 5.62809449 ,1.53153867 ,1.91185714 ,3.09035082,
  4.6656977 , 5.07192082],
 [0.91949879, 2.54882026, 3.66047603 ,4.037698   ,5.65482684 ,1.54920134,
  1.93525375, 3.06355733, 3.95559099 ,4.90880007 ,1.04024206 ,1.91554526,
  2.98315159, 3.97314847, 5.03641783 ,0.97945639 ,2.62549418 ,3.02361615,
  4.0692074 , 5.66156247],
 [0.95969421, 2.55899698 ,3.55049233 ,4.60349968 ,4.98779363 ,1.51728505,
  1.90229386, 2.9727452  ,3.93914966 ,4.93320296 ,1.6984551  ,1.96176413,
  3.68051603, 4.06048688 ,5.61056123 ,0.92125847 ,1.93380127, 3.09536301,
  4.06584216, 5.00421865],
 [1.03288124, 1.91363891 ,3.04480708 ,4.69596464 ,5.63734562, 1.06108746,
  2.00404888, 2.92757342 ,3.91356294 ,5.01994415 ,1.57027948, 2.09736409,
  3.50744688, 4.07779934 ,5.55156735 ,0.9661141  ,2.64711816, 3.03697926,
  3.97046613, 5.54385183],
 [1.56762373, 2.62669129 ,3.53642371 ,4.6073438  ,5.58105906, 1.63137473,
  2.5381262 , 3.68714845 ,4.59485889 ,5.58220504 ,1.52158017, 2.66070249,
  3.5809828 ,4.55600481 ,5.58472249 ,1.68857016 ,2.5506759  ,3.67497152,
  4.5420725 ,5.55016827],
 [1.69756287, 2.53918668 ,3.60139345, 4.69891938, 5.64610971 ,1.64297586,
  2.57001274, 3.68249036 ,4.63195167, 5.64557942, 1.63058557 ,2.51351396,
  3.53735858, 4.53894799 ,5.50705718, 1.57982416, 2.55888435 ,3.63484914,
  4.69761851, 5.51510638],
 [1.60563002 ,2.59413551 ,3.56868959, 4.69386383, 5.69944082 ,1.50284214,
  2.64010485 ,3.60681349 ,4.5312094 , 5.64446638, 1.62505776 ,2.6947105,
  3.62267718 ,4.69140506 ,5.58482775, 1.5673007 , 2.65378873 ,3.64698126,
  4.5115605  ,5.69415851],
 [1.67199969 ,2.59267155 ,3.64050564, 4.65241042 ,5.63778497 ,1.50595006,
  2.61703816 ,3.68535003 ,4.67204252, 5.55677651, 1.65867873 ,2.64433564,
  3.52336424 ,4.55157474 ,5.51896494, 1.62351108 ,2.54443873 ,3.51950128,
  4.65074027 ,5.60584615],
 [1.61465658 ,2.52076255 ,3.60499327, 4.69620109, 5.60714403, 1.67833023,
  2.52183374 ,3.57897135 ,4.68315125, 5.5094821 , 1.5943032 , 2.54906826,
  3.62628155 ,4.52110844 ,5.50474339, 1.6472469  ,2.66638538, 3.54762158,
  4.69101003 ,5.63474952],
 [1.54281186 ,2.57366163 ,3.5829898 , 4.63869111 ,5.59287416, 1.60075937,
  2.52747947 ,3.59193679 ,4.60264284, 5.61681979 ,1.63278453 ,2.54057788,
  3.66100315 ,4.59357521 ,5.6065336 , 1.50538013 ,2.57004622 ,3.65464905,
  4.57404955 ,5.62301965],
 [1.51838629 ,2.5215201  ,3.68219279, 4.68591323 ,5.60382395 ,1.51728515,
  2.67941189 ,3.67675295 ,4.69529085 ,5.60625304 ,1.58211288 ,2.59173132,
  3.63465583 ,4.68921231 ,5.51680791 ,1.51566629 ,2.64343066, 3.55664228,
  4.58244994 ,5.57948175],
 [1.53645747 ,2.62735613 ,3.61559714 ,4.55158134 ,5.5611486 , 1.64384812,
  2.50619929 ,3.607262   ,4.60328068 ,5.55352035 ,1.536486  , 2.52429331,
  3.68818824 ,4.64461531 ,5.5227823  ,1.53043962 ,2.50354565, 3.59635796,
  4.64267496 ,5.64427136],
 [1.59050097 ,2.61351949 ,3.52239791 ,4.5932257  ,5.51903258, 1.62643465,
  2.51415181 ,3.51696723 ,4.51414896 ,5.59674339 ,1.51211995, 2.62594651,
  3.52235431 ,4.59645576 ,5.56973571 ,1.64301636 ,2.64045248 ,3.5936768,
  4.66255906 ,5.61996777]])
 
    Estimated_Y=np.array([[1.03630853, 2.51002169, 3.64894452, 3.97638663, 4.96712718, 1.69926278,
  1.92575434, 3.09915982, 3.93536153, 5.03651031, 0.9778915,  2.0404359,
  3.04557182, 4.06641713, 5.03874291, 1.52412276, 2.04873835, 3.05241862,
  4.65901292, 4.98812948],
 [1.0164724 , 2.06564506, 2.91487363, 4.07590026, 5.6760829 , 1.03492649,
  1.98476654, 2.98401699, 4.04856392 ,4.94171256, 0.9287776 , 1.9570996,
  2.95882028, 3.96522173, 4.90170973 ,1.64162737, 2.62584203, 2.96339691,
  4.50499882, 5.62120272],
 [1.08819662, 1.91239203, 2.93700525, 4.5849988 , 5.07286969, 0.9420722,
  2.05261362, 2.96230495, 3.98366372, 4.91882545 ,1.55787959 ,2.09604699,
  3.59027442, 4.00356951, 5.5546938 , 1.67662313 ,2.02322099 ,3.06832299,
  4.58040401, 5.0496606 ],
 [1.05406808, 2.56479891, 3.64708268, 4.00371784, 5.62893737 ,1.56712843,
  1.95298572, 2.98241585, 3.93542388 ,5.02185185, 1.06328221 ,1.95116496,
  2.97005028, 3.92320348, 4.98070309 ,1.04274958, 2.64731961 ,2.90726667,
  4.09689165, 5.56523765],
 [1.04711205, 2.62884308, 3.68301676 ,4.54979845, 4.91205032 ,1.65605551,
  2.02165901, 2.95642321, 4.0500723  ,4.93966417, 1.68963638, 1.92691104,
  3.55858478, 3.96163593, 5.53388328 ,0.92486325, 1.93497513, 3.07880949,
  3.95825647, 5.08223561],
 [0.95715887 ,2.09704178, 3.06933079 ,4.55842772, 5.6950331 , 0.9994557,
  2.01555829 ,2.97477636, 4.06344478 ,5.03753742, 1.55646742, 2.03041993,
  3.50237814 ,3.99232345, 5.5003393  ,1.03462789, 2.651246  , 3.0076513,
  4.01253236 ,5.64649673],
 [1.69707443 ,2.51720389, 3.50227879 ,4.54785405, 5.5548463  ,1.67123872,
  2.56359405 ,3.6616354 , 4.58443905 ,5.68245055, 1.66371276 ,2.6829684,
  3.53789517 ,4.69994981, 5.63170759 ,1.65282023, 2.6274885  ,3.51089115,
  4.58710599 ,5.66269459],
 [1.62327472 ,2.57849108 ,3.51059132 ,4.61920931, 5.67549252 ,1.5895234,
  2.55650653 ,3.65517881 ,4.65114071 ,5.69907616, 1.57008069 ,2.56071961,
  3.5432516  ,4.54916991 ,5.63212434 ,1.68775867, 2.54991796 ,3.52243597,
  4.5214387  ,5.65025492],
 [1.6064133  ,2.57487366 ,3.51330676 ,4.66069161, 5.5803262  ,1.69519709,
  2.52369182 ,3.52804874 ,4.60306763 ,5.53058359, 1.58110295 ,2.64217091,
  3.52285577 ,4.52056367 ,5.5679059  ,1.63648618, 2.67470092 ,3.61184735,
  4.68198142 ,5.54712948],
 [1.61614274 ,2.66302243 ,3.57280696 ,4.50094085, 5.62536303 ,1.54138579,
  2.64952813 ,3.67799898 ,4.56691796 ,5.52776882 ,1.62737157 ,2.59431276,
  3.57542807 ,4.56978924 ,5.58659716 ,1.51909195 ,2.66237506 ,3.69465319,
  4.65106088 ,5.63945758],
 [1.61565245 ,2.67332796 ,3.53452901 ,4.67418962 ,5.5210401  ,1.58515637,
  2.57047678 ,3.58705003 ,4.50758706 ,5.51842943 ,1.57064534 ,2.5816591,
  3.68990322 ,4.58273189 ,5.6914232  ,1.66611255 ,2.59252683 ,3.51796603,
  4.65692457 ,5.65357307],
 [1.69445898 ,2.55631056 ,3.51404773 ,4.64010099 ,5.64575727 ,1.53868939,
  2.63279886 ,3.65685226 ,4.50734271 ,5.5683367  ,1.51801038 ,2.59113624,
  3.53298505 ,4.53623249 ,5.67609518 ,1.58033495 ,2.53961357 ,3.53588908,
  4.57929043 ,5.66161244],
 [1.63253541 ,2.52125631 ,3.63868933 ,4.6743494  ,5.68496492 ,1.52390094,
  2.68642956 ,3.64449414 ,4.56233691 ,5.54028906 ,1.57221816 ,2.61203436,
  3.62568964 ,4.51061783 ,5.56929154 ,1.5016593  ,2.53371078 ,3.51227652,
  4.67179331 ,5.67727842],
 [1.54586084 ,2.58330234 ,3.57346725 ,4.55632357 ,5.66579401 ,1.61757923,
  2.600912   ,3.51053535 ,4.69180151 ,5.59884818 ,1.61604897 ,2.6882454,
  3.64561628 ,4.55761112 ,5.51092354 ,1.65961529 ,2.67993676 ,3.56460949,
  4.50820555 ,5.51468411],
 [1.62898364 ,2.55098459 ,3.57836593 ,4.59160504 ,5.66187188 ,1.5944394,
  2.64751124 ,3.58895802 ,4.67234471 ,5.60358616 ,1.66182106 ,2.5577502,
  3.50004443 ,4.64439264 ,5.56091772 ,1.57338662 ,2.51059339 ,3.68070372,
  4.62898996 ,5.55399155]])
    max_x_UWB=6
    max_y_UWB=5
    x_max=max_x_UWB-1
    x_min=1
    y_max=max_y_UWB-1
    y_min=1



    if action==0: #01
      x_TDoA=Estimated_X[0][Label]
      y_TDoA=Estimated_Y[0][Label]

    elif action==1: #02
      x_TDoA=Estimated_X[1][Label]
      y_TDoA=Estimated_Y[1][Label]

    elif action==2:#03
      x_TDoA=Estimated_X[2][Label]
      y_TDoA=Estimated_Y[2][Label]

    elif action==3:#04
      x_TDoA=Estimated_X[3][Label]
      y_TDoA=Estimated_Y[3][Label]    

    elif action==4:#05
      x_TDoA=Estimated_X[4][Label]
      y_TDoA=Estimated_Y[4][Label]

    elif action==5:#12
      x_TDoA=Estimated_X[5][Label]
      y_TDoA=Estimated_Y[5][Label]

    elif action==6:#13
      x_TDoA=Estimated_X[6][Label]
      y_TDoA=Estimated_Y[6][Label]

    elif action==7:#14
      x_TDoA=Estimated_X[7][Label]
      y_TDoA=Estimated_Y[7][Label]

    elif action==8:#15
      x_TDoA=Estimated_X[8][Label]
      y_TDoA=Estimated_Y[8][Label]

    elif action==9:#23
      x_TDoA=Estimated_X[9][Label]
      y_TDoA=Estimated_Y[9][Label]

    elif action==10:#24
      x_TDoA=Estimated_X[10][Label]
      y_TDoA=Estimated_Y[10][Label]

    elif action==11:#25
      x_TDoA=Estimated_X[11][Label]
      y_TDoA=Estimated_Y[11][Label]

    elif action==12:#34
      x_TDoA=Estimated_X[12][Label]
      y_TDoA=Estimated_Y[12][Label]

    elif action==13:#35
      x_TDoA=Estimated_X[13][Label]
      y_TDoA=Estimated_Y[13][Label]

    elif action==14:#45
      x_TDoA=Estimated_X[14][Label]
      y_TDoA=Estimated_Y[14][Label]


    self.state[0] =  Label
    self.state[1] = X_user
    self.state[2] = Y_user 
    self.state[3] = x_TDoA
    self.state[4] = y_TDoA  



  def update_probability_matrix(self, action):
    Label = int(self.state[0])
    #print(Label)
    X_user=self.state[1]
    Y_user=self.state[2]
    x_TDoA = self.state[3] 
    y_TDoA = self.state[4]  

    Location_x=[1., 2., 3., 4., 5., 1., 2., 3., 4., 5., 1., 2., 3. ,4. ,5., 1. ,2. ,3. ,4., 5.]
    Location_y=[1., 1., 1., 1., 1., 2., 2., 2., 2. ,2., 3., 3., 3., 3., 3. ,4., 4. ,4. ,4. ,4.]


    Link_condition=np.array(
[[1., 1., 1., 1., 1., 1., 1., 1., 1., 1. ,1., 1., 1. ,1., 1., 0., 1., 1., 0., 1.],
 [1., 0., 0., 1., 1., 0., 1., 1., 1., 1. ,1., 1., 1. ,1., 1., 1., 1., 1., 1., 1.],
 [1., 1., 1., 1., 0., 1., 1., 1., 1., 1. ,1., 1., 1. ,1., 1., 1., 0., 1., 1., 1.],
 [1., 1., 1., 0., 1., 1., 1., 1., 1., 1. ,0., 1., 0. ,1., 1., 1., 1., 1., 1., 1.],
 [1., 1., 1., 1., 1., 1., 1., 1., 0., 1. ,1., 0., 1. ,0., 1., 1., 1., 1., 1., 1.],
 [1., 1., 1., 1., 1., 1., 0., 1., 1. ,1. ,1., 1. ,1. ,1., 1., 1., 1., 1., 1., 1.]])
    
    Estimated_X=np.array([[0.92080541, 2.55754959, 3.56294827 ,4.07047654 ,5.00962982, 1.65446637,
  2.07025804, 3.05300205, 3.98863413, 5.05334402, 1.05118333 ,2.04094691,
  2.98149286, 3.99737396, 4.9685466 , 1.50202041, 1.92154936 ,2.90599674,
  4.56070214, 5.07062182],
 [1.09708685, 2.05815177, 3.08957037, 3.96645196 ,5.57563608 ,0.96997458,
  2.03541889, 3.00514886, 3.99470451, 4.98496912 ,1.00914971 ,2.09534544,
  2.99564709, 3.9063779 , 5.07998394 ,1.55941232 ,2.54070627 ,3.07795924,
  4.68506958, 5.54476713],
 [1.0325879,  2.02193754, 2.96879542 ,4.55309572 ,4.91216912 ,0.91828615,
  2.02617768, 3.04915626, 4.0356432  ,5.07245377 ,1.66833102 ,1.99146224,
  3.66742883, 3.99386528, 5.62809449 ,1.53153867 ,1.91185714 ,3.09035082,
  4.6656977 , 5.07192082],
 [0.91949879, 2.54882026, 3.66047603 ,4.037698   ,5.65482684 ,1.54920134,
  1.93525375, 3.06355733, 3.95559099 ,4.90880007 ,1.04024206 ,1.91554526,
  2.98315159, 3.97314847, 5.03641783 ,0.97945639 ,2.62549418 ,3.02361615,
  4.0692074 , 5.66156247],
 [0.95969421, 2.55899698 ,3.55049233 ,4.60349968 ,4.98779363 ,1.51728505,
  1.90229386, 2.9727452  ,3.93914966 ,4.93320296 ,1.6984551  ,1.96176413,
  3.68051603, 4.06048688 ,5.61056123 ,0.92125847 ,1.93380127, 3.09536301,
  4.06584216, 5.00421865],
 [1.03288124, 1.91363891 ,3.04480708 ,4.69596464 ,5.63734562, 1.06108746,
  2.00404888, 2.92757342 ,3.91356294 ,5.01994415 ,1.57027948, 2.09736409,
  3.50744688, 4.07779934 ,5.55156735 ,0.9661141  ,2.64711816, 3.03697926,
  3.97046613, 5.54385183],
 [1.56762373, 2.62669129 ,3.53642371 ,4.6073438  ,5.58105906, 1.63137473,
  2.5381262 , 3.68714845 ,4.59485889 ,5.58220504 ,1.52158017, 2.66070249,
  3.5809828 ,4.55600481 ,5.58472249 ,1.68857016 ,2.5506759  ,3.67497152,
  4.5420725 ,5.55016827],
 [1.69756287, 2.53918668 ,3.60139345, 4.69891938, 5.64610971 ,1.64297586,
  2.57001274, 3.68249036 ,4.63195167, 5.64557942, 1.63058557 ,2.51351396,
  3.53735858, 4.53894799 ,5.50705718, 1.57982416, 2.55888435 ,3.63484914,
  4.69761851, 5.51510638],
 [1.60563002 ,2.59413551 ,3.56868959, 4.69386383, 5.69944082 ,1.50284214,
  2.64010485 ,3.60681349 ,4.5312094 , 5.64446638, 1.62505776 ,2.6947105,
  3.62267718 ,4.69140506 ,5.58482775, 1.5673007 , 2.65378873 ,3.64698126,
  4.5115605  ,5.69415851],
 [1.67199969 ,2.59267155 ,3.64050564, 4.65241042 ,5.63778497 ,1.50595006,
  2.61703816 ,3.68535003 ,4.67204252, 5.55677651, 1.65867873 ,2.64433564,
  3.52336424 ,4.55157474 ,5.51896494, 1.62351108 ,2.54443873 ,3.51950128,
  4.65074027 ,5.60584615],
 [1.61465658 ,2.52076255 ,3.60499327, 4.69620109, 5.60714403, 1.67833023,
  2.52183374 ,3.57897135 ,4.68315125, 5.5094821 , 1.5943032 , 2.54906826,
  3.62628155 ,4.52110844 ,5.50474339, 1.6472469  ,2.66638538, 3.54762158,
  4.69101003 ,5.63474952],
 [1.54281186 ,2.57366163 ,3.5829898 , 4.63869111 ,5.59287416, 1.60075937,
  2.52747947 ,3.59193679 ,4.60264284, 5.61681979 ,1.63278453 ,2.54057788,
  3.66100315 ,4.59357521 ,5.6065336 , 1.50538013 ,2.57004622 ,3.65464905,
  4.57404955 ,5.62301965],
 [1.51838629 ,2.5215201  ,3.68219279, 4.68591323 ,5.60382395 ,1.51728515,
  2.67941189 ,3.67675295 ,4.69529085 ,5.60625304 ,1.58211288 ,2.59173132,
  3.63465583 ,4.68921231 ,5.51680791 ,1.51566629 ,2.64343066, 3.55664228,
  4.58244994 ,5.57948175],
 [1.53645747 ,2.62735613 ,3.61559714 ,4.55158134 ,5.5611486 , 1.64384812,
  2.50619929 ,3.607262   ,4.60328068 ,5.55352035 ,1.536486  , 2.52429331,
  3.68818824 ,4.64461531 ,5.5227823  ,1.53043962 ,2.50354565, 3.59635796,
  4.64267496 ,5.64427136],
 [1.59050097 ,2.61351949 ,3.52239791 ,4.5932257  ,5.51903258, 1.62643465,
  2.51415181 ,3.51696723 ,4.51414896 ,5.59674339 ,1.51211995, 2.62594651,
  3.52235431 ,4.59645576 ,5.56973571 ,1.64301636 ,2.64045248 ,3.5936768,
  4.66255906 ,5.61996777]])
 
    Estimated_Y=np.array([[1.03630853, 2.51002169, 3.64894452, 3.97638663, 4.96712718, 1.69926278,
  1.92575434, 3.09915982, 3.93536153, 5.03651031, 0.9778915,  2.0404359,
  3.04557182, 4.06641713, 5.03874291, 1.52412276, 2.04873835, 3.05241862,
  4.65901292, 4.98812948],
 [1.0164724 , 2.06564506, 2.91487363, 4.07590026, 5.6760829 , 1.03492649,
  1.98476654, 2.98401699, 4.04856392 ,4.94171256, 0.9287776 , 1.9570996,
  2.95882028, 3.96522173, 4.90170973 ,1.64162737, 2.62584203, 2.96339691,
  4.50499882, 5.62120272],
 [1.08819662, 1.91239203, 2.93700525, 4.5849988 , 5.07286969, 0.9420722,
  2.05261362, 2.96230495, 3.98366372, 4.91882545 ,1.55787959 ,2.09604699,
  3.59027442, 4.00356951, 5.5546938 , 1.67662313 ,2.02322099 ,3.06832299,
  4.58040401, 5.0496606 ],
 [1.05406808, 2.56479891, 3.64708268, 4.00371784, 5.62893737 ,1.56712843,
  1.95298572, 2.98241585, 3.93542388 ,5.02185185, 1.06328221 ,1.95116496,
  2.97005028, 3.92320348, 4.98070309 ,1.04274958, 2.64731961 ,2.90726667,
  4.09689165, 5.56523765],
 [1.04711205, 2.62884308, 3.68301676 ,4.54979845, 4.91205032 ,1.65605551,
  2.02165901, 2.95642321, 4.0500723  ,4.93966417, 1.68963638, 1.92691104,
  3.55858478, 3.96163593, 5.53388328 ,0.92486325, 1.93497513, 3.07880949,
  3.95825647, 5.08223561],
 [0.95715887 ,2.09704178, 3.06933079 ,4.55842772, 5.6950331 , 0.9994557,
  2.01555829 ,2.97477636, 4.06344478 ,5.03753742, 1.55646742, 2.03041993,
  3.50237814 ,3.99232345, 5.5003393  ,1.03462789, 2.651246  , 3.0076513,
  4.01253236 ,5.64649673],
 [1.69707443 ,2.51720389, 3.50227879 ,4.54785405, 5.5548463  ,1.67123872,
  2.56359405 ,3.6616354 , 4.58443905 ,5.68245055, 1.66371276 ,2.6829684,
  3.53789517 ,4.69994981, 5.63170759 ,1.65282023, 2.6274885  ,3.51089115,
  4.58710599 ,5.66269459],
 [1.62327472 ,2.57849108 ,3.51059132 ,4.61920931, 5.67549252 ,1.5895234,
  2.55650653 ,3.65517881 ,4.65114071 ,5.69907616, 1.57008069 ,2.56071961,
  3.5432516  ,4.54916991 ,5.63212434 ,1.68775867, 2.54991796 ,3.52243597,
  4.5214387  ,5.65025492],
 [1.6064133  ,2.57487366 ,3.51330676 ,4.66069161, 5.5803262  ,1.69519709,
  2.52369182 ,3.52804874 ,4.60306763 ,5.53058359, 1.58110295 ,2.64217091,
  3.52285577 ,4.52056367 ,5.5679059  ,1.63648618, 2.67470092 ,3.61184735,
  4.68198142 ,5.54712948],
 [1.61614274 ,2.66302243 ,3.57280696 ,4.50094085, 5.62536303 ,1.54138579,
  2.64952813 ,3.67799898 ,4.56691796 ,5.52776882 ,1.62737157 ,2.59431276,
  3.57542807 ,4.56978924 ,5.58659716 ,1.51909195 ,2.66237506 ,3.69465319,
  4.65106088 ,5.63945758],
 [1.61565245 ,2.67332796 ,3.53452901 ,4.67418962 ,5.5210401  ,1.58515637,
  2.57047678 ,3.58705003 ,4.50758706 ,5.51842943 ,1.57064534 ,2.5816591,
  3.68990322 ,4.58273189 ,5.6914232  ,1.66611255 ,2.59252683 ,3.51796603,
  4.65692457 ,5.65357307],
 [1.69445898 ,2.55631056 ,3.51404773 ,4.64010099 ,5.64575727 ,1.53868939,
  2.63279886 ,3.65685226 ,4.50734271 ,5.5683367  ,1.51801038 ,2.59113624,
  3.53298505 ,4.53623249 ,5.67609518 ,1.58033495 ,2.53961357 ,3.53588908,
  4.57929043 ,5.66161244],
 [1.63253541 ,2.52125631 ,3.63868933 ,4.6743494  ,5.68496492 ,1.52390094,
  2.68642956 ,3.64449414 ,4.56233691 ,5.54028906 ,1.57221816 ,2.61203436,
  3.62568964 ,4.51061783 ,5.56929154 ,1.5016593  ,2.53371078 ,3.51227652,
  4.67179331 ,5.67727842],
 [1.54586084 ,2.58330234 ,3.57346725 ,4.55632357 ,5.66579401 ,1.61757923,
  2.600912   ,3.51053535 ,4.69180151 ,5.59884818 ,1.61604897 ,2.6882454,
  3.64561628 ,4.55761112 ,5.51092354 ,1.65961529 ,2.67993676 ,3.56460949,
  4.50820555 ,5.51468411],
 [1.62898364 ,2.55098459 ,3.57836593 ,4.59160504 ,5.66187188 ,1.5944394,
  2.64751124 ,3.58895802 ,4.67234471 ,5.60358616 ,1.66182106 ,2.5577502,
  3.50004443 ,4.64439264 ,5.56091772 ,1.57338662 ,2.51059339 ,3.68070372,
  4.62898996 ,5.55399155]])
    max_x_UWB=6
    max_y_UWB=5
    x_max=max_x_UWB-1
    x_min=1
    y_max=max_y_UWB-1
    y_min=1



    if action==0: #01
      x_TDoA=Estimated_X[0][Label]
      y_TDoA=Estimated_Y[0][Label]

    elif action==1: #02
      x_TDoA=Estimated_X[1][Label]
      y_TDoA=Estimated_Y[1][Label]

    elif action==2:#03
      x_TDoA=Estimated_X[2][Label]
      y_TDoA=Estimated_Y[2][Label]

    elif action==3:#04
      x_TDoA=Estimated_X[3][Label]
      y_TDoA=Estimated_Y[3][Label]    

    elif action==4:#05
      x_TDoA=Estimated_X[4][Label]
      y_TDoA=Estimated_Y[4][Label]

    elif action==5:#12
      x_TDoA=Estimated_X[5][Label]
      y_TDoA=Estimated_Y[5][Label]

    elif action==6:#13
      x_TDoA=Estimated_X[6][Label]
      y_TDoA=Estimated_Y[6][Label]

    elif action==7:#14
      x_TDoA=Estimated_X[7][Label]
      y_TDoA=Estimated_Y[7][Label]

    elif action==8:#15
      x_TDoA=Estimated_X[8][Label]
      y_TDoA=Estimated_Y[8][Label]

    elif action==9:#23
      x_TDoA=Estimated_X[9][Label]
      y_TDoA=Estimated_Y[9][Label]

    elif action==10:#24
      x_TDoA=Estimated_X[10][Label]
      y_TDoA=Estimated_Y[10][Label]

    elif action==11:#25
      x_TDoA=Estimated_X[11][Label]
      y_TDoA=Estimated_Y[11][Label]

    elif action==12:#34
      x_TDoA=Estimated_X[12][Label]
      y_TDoA=Estimated_Y[12][Label]

    elif action==13:#35
      x_TDoA=Estimated_X[13][Label]
      y_TDoA=Estimated_Y[13][Label]

    elif action==14:#45
      x_TDoA=Estimated_X[14][Label]
      y_TDoA=Estimated_Y[14][Label]




    Location_error=5*(np.sqrt((X_user-x_TDoA)**2+(Y_user-y_TDoA)**2))

    if Location_error < 0.5:
        r=  1 /Location_error
        c = Location_error 
    elif Location_error > 0.5:
        r= -1*Location_error
        c = Location_error  

    max_x_UWB=6
    max_y_UWB=5
    x_max=max_x_UWB-1
    x_min=1
    y_max=max_y_UWB-1
    y_min=1

    move_x_user = random.randint(-1, 1)
    move_y_user = random.randint(-1,1)
    X_user = move_x_user+X_user
    if X_user < x_min:
      move_x_user = 1
      X_user = move_x_user+X_user
    elif X_user > x_max:
      move_x_user = -1
      X_user = move_x_user+X_user
    Y_user = move_y_user+Y_user     
    if Y_user < y_min:
      move_y_user = 1
      Y_user = move_y_user+Y_user
    elif Y_user > y_max :
      move_y_user = -1
      Y_user = move_y_user+Y_user
    Location_x=[1., 2., 3., 4., 5., 1., 2., 3., 4., 5., 1., 2., 3. ,4. ,5., 1. ,2. ,3. ,4., 5.]
    Location_y=[1., 1., 1., 1., 1., 2., 2., 2., 2. ,2., 3., 3., 3., 3., 3. ,4., 4. ,4. ,4. ,4.]


    result1 = np.where(X_user==Location_x)
    result2 = np.where(Y_user==Location_y)
    Label_new =np.intersect1d(result1, result2)

    return Label_new, X_user, Y_user, x_TDoA, y_TDoA, r, c 

  def act(self, action,real_time_info):
    self._DoAction(action,real_time_info)
    Label_new, X_user, Y_user, x_TDoA, y_TDoA, reward, errorr = self.update_probability_matrix()
    return self.observe(), Label_new, X_user, Y_user, x_TDoA, y_TDoA, reward, errorr


  def observe(self):
    return self.state.reshape((1,-1))
    
  def reset(self):
    self.state = np.array([0,1.0,1.0,0.0,0.0])

